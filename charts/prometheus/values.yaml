image:
  repository: prom/prometheus
  tag: v2.33.1
  pullPolicy: IfNotPresent

nameOverride: ''
fullnameOverride: ''

deployment:
  enabled: true
  kind: Deployment
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  annotations: {}
  labels: {}

service:
  enabled: true
  type: ClusterIP
  annotations: {}
  labels: {}

env:
  - name: TZ
    value: UTC

extraArgs: []

ports:
  http:
    enabled: true
    port: 9090

configMap:
  create: true
  mountPath: /etc/config
  existingConfigMap: ''
  files: {}
    # prometheus.yml: |
    #   # global config
    # alert.rules: |
    #   # rules
  annotations: {}
  labels: {}

configMapReload:
  enabled: true
  image:
    repository: jimmidyson/configmap-reload
    tag: v0.5.0
    pullPolicy: IfNotPresent
  extraArgs: []
    # - --webhook-method HEAD
    # - --webhook-retries 5
  extraConfigMapMounts: []
    # - name: alerts
    #   configMap: prometheus-alerts
    #   mountPath: /etc/alerts
    #   subPath: ''
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

persistentVolumeClaim:
  create: true
  mountPath: /prometheus
  existingPersistentVolumeClaim: ''
  annotations: {}
  labels: {}

serviceAccount:
  create: true
  name: ''
  annotations: {}
  labels: {}

rbac:
  create: true
  annotations: {}
  labels: {}

securityContext: {}
  # fsGroup: 9999
  # runAsNonRoot: true
  # runAsGroup: 9999
  # runAsUser: 9999

resources: {}
  # limits:
  #   cpu: 500m
  #   memory: 128Mi
  # requests:
  #   cpu: 500m
  #   memory: 128Mi
